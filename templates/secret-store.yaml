{{- range $k, $v := .Values.namespaces }}
{{- if $v.externalSecrets }}
{{- $namespace := printf "%s-%s" $.Values.tenant $k }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $namespace }}
  namespace: {{ $.Values.externalSecrets.tenantSecretNamespace }}
spec:
  data:
  - remoteRef:
      conversionStrategy: Default
      decodingStrategy: None
      key: {{ $v.externalSecrets.tenantTokenKey }}
      metadataPolicy: None
    secretKey: eso-token
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.externalSecrets.tenantClusterSecretStore }}
  target:
    creationPolicy: Owner
    deletionPolicy: Retain
    template:
      metadata:
        labels:
          replicate: "true"
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  name: {{ $.Values.tenant }}
  namespace: {{ $namespace }}
spec:
  provider:
    doppler:
      auth:
        secretRef:
          dopplerToken:
            key: eso-token
            name: {{ $namespace }}
{{- end}}
{{- end}}
